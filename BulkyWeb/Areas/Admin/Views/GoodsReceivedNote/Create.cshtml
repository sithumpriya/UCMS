@using Newtonsoft.Json
@model GoodsReceivedNoteVM

@{
    var productListJson = JsonConvert.SerializeObject(Model.ProductList.Select(p => new { p.Value, p.Text }));
    var rackLocationListJson = JsonConvert.SerializeObject(Model.RackLocationList.Select(r => new { r.Value, r.Text }));
}

<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<div class="container mt-5 mb-5">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow border-0">
                <div class="card-header bg-secondary text-white text-center">
                    <h3>Create Goods Received Note (GRN)</h3>
                </div>
                <div class="card-body">
                    <form method="post" asp-action="Create">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="GoodsReceivedNote.CustomerId" class="form-label">Select Customer</label>
                                <select asp-for="GoodsReceivedNote.CustomerId" class="form-select customer-select" asp-items="Model.CustomerList"></select>
                                <span asp-validation-for="GoodsReceivedNote.CustomerId" class="text-danger"></span>
                            </div>

                            <div class="col-md-3">
                                <label asp-for="GoodsReceivedNote.Code" class="form-label">Code</label>
                                <input asp-for="GoodsReceivedNote.Code" class="form-control" />
                                <span asp-validation-for="GoodsReceivedNote.Code" class="text-danger"></span>
                            </div>

                            <div class="col-md-3">
                                <label asp-for="GoodsReceivedNote.GRNDate" class="form-label">GRN Date</label>
                                <input asp-for="GoodsReceivedNote.GRNDate" class="form-control" type="datetime-local" />
                                <span asp-validation-for="GoodsReceivedNote.GRNDate" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label asp-for="GoodsReceivedNote.StartTime" class="form-label">Start Time</label>
                                <input asp-for="GoodsReceivedNote.StartTime" class="form-control" type="datetime-local" />
                            </div>
                            <div class="col-md-4">
                                <label asp-for="GoodsReceivedNote.FinishTime" class="form-label">Finish Time</label>
                                <input asp-for="GoodsReceivedNote.FinishTime" class="form-control" type="datetime-local" />
                            </div>
                            <div class="col-md-4">
                                <label asp-for="GoodsReceivedNote.SealNo" class="form-label">Seal No</label>
                                <input asp-for="GoodsReceivedNote.SealNo" class="form-control" />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label asp-for="GoodsReceivedNote.VehicleNo" class="form-label">Vehicle No</label>
                                <input asp-for="GoodsReceivedNote.VehicleNo" class="form-control" />
                            </div>
                            <div class="col-md-4">
                                <label asp-for="GoodsReceivedNote.ContainerNo" class="form-label">Container No</label>
                                <input asp-for="GoodsReceivedNote.ContainerNo" class="form-control" />
                            </div>
                            <div class="col-md-4">
                                <label asp-for="GoodsReceivedNote.TrailorNo" class="form-label">Trailor No</label>
                                <input asp-for="GoodsReceivedNote.TrailorNo" class="form-control" />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="GoodsReceivedNote.Remark" class="form-label">Remark</label>
                            <textarea asp-for="GoodsReceivedNote.Remark" class="form-control"></textarea>
                        </div>

                        <hr />
                        <!-- Product Search -->
                        <div class="row mb-3">
                            <div class="col-md-8 position-relative">
                                <label for="productSearchInput" class="form-label">Search Product</label>
                                <input id="productSearchInput" type="text" class="form-control" placeholder="Type product name..." autocomplete="off" />
                                <ul id="productSuggestions" class="list-group position-absolute w-100" style="z-index: 10;"></ul>
                            </div>
                        </div>

                        <table class="table table-bordered" id="productTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Product</th>
                                    <th>Rack Location</th>
                                    <th>Quantity</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Rows will be dynamically added -->
                            </tbody>
                        </table>

                        <div class="row mt-4">
                            <div class="col-md-4">
                                <button type="submit" class="btn btn-success w-100">Create GRN</button>
                            </div>
                            <div class="col-md-4">
                                <a asp-action="Index" class="btn btn-outline-secondary w-100">Back to List</a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            const products = @Html.Raw(JsonConvert.SerializeObject(Model.ProductList.Select(p => new { id = p.Value, name = p.Text })));
            const racks = @Html.Raw(JsonConvert.SerializeObject(Model.RackLocationList.Select(r => new { r.Value, r.Text })));

            let rowIndex = 0;

            function getAllSelectedRackIds(excludeName = null) {
                const selected = [];
                $('#productTable select[name$=".RackLocationId"]').each(function () {
                    const val = $(this).val();
                    const name = $(this).attr('name');
                    if (val && name !== excludeName) {
                        selected.push(val);
                    }
                });
                return selected;
            }

            function createRackDropdown(name, currentValue = "") {
                const selectedRackIds = getAllSelectedRackIds(name);
                let html = `<select name="${name}" class="form-select rack-location"><option value="">-- Select --</option>`;
                racks.forEach(r => {
                    if (r.Value === currentValue || !selectedRackIds.includes(r.Value)) {
                        const selected = r.Value === currentValue ? 'selected' : '';
                        html += `<option value="${r.Value}" ${selected}>${r.Text}</option>`;
                    }
                });
                html += `</select>`;
                return html;
            }

            function refreshRackDropdowns() {
                $('#productTable select[name$=".RackLocationId"]').each(function () {
                    const name = $(this).attr('name');
                    const currentVal = $(this).val();
                    const newDropdown = $(createRackDropdown(name, currentVal));
                    $(this).replaceWith(newDropdown);
                });
            }

            function addProductRow(productId, productName) {
                const row = `
                    <tr>
                        <td>
                            <input type="hidden" name="Products[${rowIndex}].ProductId" value="${productId}" />
                            <input type="text" class="form-control" value="${productName}" readonly />
                        </td>
                        <td>${createRackDropdown(`Products[${rowIndex}].RackLocationId`)}</td>
                        <td><input name="Products[${rowIndex}].Quantity" type="number" min="1" class="form-control" /></td>
                        <td><button type="button" class="btn btn-sm btn-danger removeRow">Remove</button></td>
                    </tr>
                `;
                $('#productTable tbody').append(row);
                rowIndex++;
                refreshRackDropdowns();
            }

            $('#productSearchInput').on('input', function () {
                const query = $(this).val().toLowerCase();
                const matches = products.filter(p => p.name.toLowerCase().includes(query));

                const $suggestions = $('#productSuggestions');
                $suggestions.empty();

                if (query && matches.length > 0) {
                    matches.slice(0, 5).forEach(p => {
                        $suggestions.append(`<li class="list-group-item list-group-item-action" data-id="${p.id}" data-name="${p.name}">${p.name}</li>`);
                    });
                }
            });

            $(document).on('click', '#productSuggestions li', function () {
                const productId = $(this).data('id');
                const productName = $(this).data('name');

                addProductRow(productId, productName);

                $('#productSearchInput').val('');
                $('#productSuggestions').empty();
            });

            $(document).on('click', '.removeRow', function () {
                $(this).closest('tr').remove();
                refreshRackDropdowns();
            });

            // Hide suggestions when clicking outside
            $(document).click(function (e) {
                if (!$(e.target).closest('#productSearchInput').length) {
                    $('#productSuggestions').empty();
                }
            });

            // Refresh racks on rack change to hide new selection from other dropdowns
            $(document).on('change', 'select[name$=".RackLocationId"]', function () {
                refreshRackDropdowns();
            });

            const pad = (n) => n.toString().padStart(2, '0');
            const now = new Date();

            const localDateTime =
                now.getFullYear() + '-' +
                pad(now.getMonth() + 1) + '-' +
                pad(now.getDate()) + 'T' +
                pad(now.getHours()) + ':' +
                pad(now.getMinutes());

            $('input[name="GoodsReceivedNote.GRNDate"]').val(localDateTime);
            $('input[name="GoodsReceivedNote.StartTime"]').val(localDateTime);
            $('input[name="GoodsReceivedNote.FinishTime"]').val(localDateTime);

        });
    </script>
}